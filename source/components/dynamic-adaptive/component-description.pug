section.component-description
  h2.subtitle Описание
  p
    | При работе над адаптивом сайта мы часто сталкиваемся в проблемой, что некоторые блоки находятся совершенно в разным местах и зачастую имеют совершенно другой порядок, не такой, как был к примеру на десктопном разрешении.
    em  Одна из частых проблем - это когда при адаптиве сайта нам нужно перенести блок контактов из шапки сайта в бургерное меню.
    |  Данную задачу средствами CSS решить крайне сложно, приходится при адаптиве переопределять порядок элементов, писать много дополнительный свойств, что бы разместить элементы согласно макету.
    |  Но порой даже такие манипуляции не приводят к должному результату и нам приходится каждый раз под такие элементы писать на JS код, который при адаптиве будет перемещаться блоки в нужные нам места.
    |  Это занимает много времени и добавляется много лишнего кода.
  p
    |  Компонент динамического адаптива позволит работать с компонентами страницы при адаптиве проще, удобнее и быстрее.
    |  Функционал динамического адаптива позволяет перемещать необходимые блоки, на заданных разрешениях в другие блоки и обратно. При этом не создаются дублирующие элементы, а именно нужный нам элемент перемещается в другой блок, без необходимости перезагружать страницу, а прямо через resize в реальном времени.
  p
    | В файле
    em  init-dynamic-adaptive.js
    |  создаётся объект DynamicAdaptive который записывается в переменную da, после чего динамический адаптив инициализируется.
  p Динамический адаптив состоит из следующих файлов: dynamic-adaptive.js и init-dynamic-adaptive.js все файлы обязательны к переносу в проект! Файл dynamic-adaptive.scss добавлен только для демонстрации работы компонента, в проект переносить его не нужно
  p
    | В файле
    em  init-dynamic-adaptive.js
    |  при инициализации в переменной #[em da] в скобках нужно указать тип медиа запроса при котором будет срабатывать данный компонент:
    |  указать #[em min] если вам нужно, что бы срабатывал компонент по принципу min-width либо #[em max], если по принципу max-width.
    |  По умолчанию компонент настроен на max-width.
  h2.component__subtitle Обязательные data атрибуты
  p
    em data-da=".block, when, where"
    |  Данный атрибут устанавливается на том элементе, который мы хотим переносить в другое место при адаптиве.
  p
    | #[em .block] - сюда мы записываем селектор родительского блока в который хотим переместить наш компонент. При этом селектор может быть любым, но обязательно условие в том, что должен быть символ обозначение селектора.
    |  К примеру: по классу - #[em .block], по id - #[em #block], по data атрибуту - #[em [data-when]] и так же можно использовать составные селекторы - #[em .foo .bar [data-buzz]]
  p
    | #[em when] - когда мы хотим переместить данный блок. В данное место мы записываем разрешение экрана, при котором должен переместить блок. Момент медиа запроса в данном случае будет зависить от того параметра, который вы укажите при инициализации данного компонента.
    |  К примеру: #[em 767] - так как по умолчание при инициализации у нас указан тип #[em max], то в этом случа элемент переместиться тогда, когда сработает медиа запрос max-width(767px)
  p
    | #[em where] - на какую позицию внутри указанного блока переместиться элемент. Если не указать данный параметр, то по умолчанию элемент переместиться в конец родителя, на позицию last.
    | Доступные значения: first, last или номер позиции начиная с 0.
    |  К примеру: #[em data-da=".block, 767, first"] - так элемент переместиться в блок с классом .block при разрешении ниже 768px на первое место в этом родителе. Запятые между значениями ОБЯЗАТЕЛЬНЫ!
