section.component-description.for-load(data-tabs='element')
  p В данной реализации используется делегирование, но это не решает вопрос с открытием активного таба, так как высота у него устанавливается в JS, этот вопрос решается методом класса. Добавлен ResizeObserver, что помогает менять высоту блока при изменении размеров его содержимого без вызова дополнительных методов или функций (например, если в табе будет кнопка "показать ещё", которая будет разворачивать дополнительный текст).
  p Табы состоят из следующих файлов: #[b tabs.js, init-tabs.js, data-tabs.scss], все файлы обязательны к переносу в проект! Файл #[b tabs.scss] добавлен только для стилизации, в нём вы можете менять всё, что угодно.
  p В файле #[b init-tabs.js] создаётся экземпляр класса #[b Tabs] который записывается в переменную #[b tabs], им вы можете пользоваться по проекту при необходимости, так же он записывается в #[b window.tabs].
  p Если табы находятся на первом экране, во избежание дёрганья во время расчёта высоты элемента, активному элементу #[b data-tabs="element"] нужно добавить класс #[b .for-load], после инициализации табов он снимется.
  p #[b Используйте в разработке экспортируемую переменную tabs, window сделан для бэкэнда]
  h2.subtitle Обязательные data атрибуты
  table
    tr
      th
        p data-tabs="parent"
      td
        p Устанавливается на родителе
    tr
      th
        p data-tabs="controls"
      td
        p Устанавливается на родителе контролов (кнопок)
    tr
      th
        p data-tabs="control"
      td
        p Устанавливается на контроле (кнопке)
    tr
      th
        p data-tabs="content"
      td
        p Устанавливается на родителе показываемых элементов
    tr
      th
        p data-tabs="element"
      td
        p Устанавливается на показываемом элементе
  h2.subtitle Необязательные data атрибуты
  table
    tr
      th
        p data-delay="время в милисекундах"
      td
        p Устанавливается на родителе. Отвечает за задержку при смене табов, а именно задержку между убиранием активного класса у активного элемента и установкой активного класса на выбранном элементе.
    tr
      th
        p data-height="max"
      td
        p Устанавливается на родителе. Если он установлен, то высота блока будет равна максимальной высоте элементов таба.
    tr
      th
        p data-height="unset"
      td
        p Устанавливается на родителе. Если он установлен, то высота блока не будет рассчитываться из js, а будет зависеть от стилей. Полезно для кейсов, когда у контента фиксированная высота, и в табе нужна прокрутка. Например, модалка на весь экран с табами.
    tr
      th
        p data-accordion-media='строка медиавыражения'
      td
        p Устанавливается на&nbsp;родителе в&nbsp;формате <em>(max-width:767px)</em>. Если он&nbsp;установлен, то&nbsp;при соответствии медиавыражению, переданному в&nbsp;аттрибуте, табы отображаются в&nbsp;виде аккордеонов
  h2.subtitle Методы экземпляра класса tabs
  table
    tr
      th
        p tabs.openTab(control)
      td
        p Принимает контрол (кнопку) в виде DOM-элемента, отвечающую за открытие таба.
    tr
      th
        p tabs.reInit()
      td
        p Вызывается при динамическом добавлении новых табов, никак не влияет на те табы, что уже есть на странице.
  h2.subtitle Инициализация
  p По умолчанию открыт первый элемент таба, все классы расставляются автоматом. Если нужно, чтобы был открыт не первый элемент таба, то нужно установить класс #[b is-active] на нужный вам контрол (кнопку). Если вы установите этот класс на всех контролах (кнопках), то он снимется со всех контролов (кнопок), кроме первого по порядку в разметке, относящихся к своему родителю #[b (data-tabs="parent")]. Во вложенных родителях #[b (data-tabs="parent")] произойдёт то же самое, но относительно своего родителя.
